module completion/TL-Start-completion-insertions
imports TL-Start

imports completion/Funcons-completion-insertions

exports
  context-free start-symbols
    L-start L-exp L-int LEX-int L-id LEX-id

  context-free syntax
    COMPLETION-INSERTION -> L-start {cons("L-start-Plhdr"), placeholder-insertion}
    COMPLETION-INSERTION -> L-exp   {cons("L-exp-Plhdr"), placeholder-insertion}
    COMPLETION-INSERTION -> L-int   {cons("L-int-Plhdr"), placeholder-insertion}
    COMPLETION-INSERTION -> LEX-int {cons("LEX-int-Plhdr"), placeholder-insertion}
    COMPLETION-INSERTION -> L-id    {cons("L-id-Plhdr"), placeholder-insertion}
    COMPLETION-INSERTION -> LEX-id  {cons("LEX-id-Plhdr"), placeholder-insertion}

  context-free start-symbols
    L-start L-exp L-int FCT-Quoted FCT L-id

  context-free syntax
    COMPLETION-INSERTION -> L-start    {cons("L-start-Plhdr"), placeholder-insertion}
    COMPLETION-INSERTION -> L-exp      {cons("L-exp-Plhdr"), placeholder-insertion}
    COMPLETION-INSERTION -> L-int      {cons("L-int-Plhdr"), placeholder-insertion}
    COMPLETION-INSERTION -> FCT-Quoted {cons("FCT-Quoted-Plhdr"), placeholder-insertion}
    COMPLETION-INSERTION -> FCT        {cons("FCT-Plhdr"), placeholder-insertion}
    COMPLETION-INSERTION -> L-id       {cons("L-id-Plhdr"), placeholder-insertion}

  lexical syntax
    COMPLETION-INSERTION -> "start" {literal-completion}
    COMPLETION-INSERTION -> "eval"  {literal-completion}
    COMPLETION-INSERTION -> "int"   {literal-completion}
    COMPLETION-INSERTION -> "id"    {literal-completion}
    COMPLETION-INSERTION -> "[:"    {literal-completion}
    COMPLETION-INSERTION -> ":]"    {literal-completion}

exports
  lexical syntax
     -> COMPLETION-INSERTION 