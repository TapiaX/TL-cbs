module pp/Funcons-pp-pp

imports
  libstratego-gpp
  libspoofax/sdf/pp
  libspoofax/term/origin
  libspoofax/term/annotation
  libstratego-sglr
  libstratego-sglr
  signatures/Funcons-pp-sig


imports
  signatures/Funcons-sig


imports
  pp/Funcons-pp


strategies
  prettyprint-example =
    prettyprint-unknown

  prettyprint-unknown =
    fail

  prettyprint-unknown(|sort) =
    fail


strategies
  prettyprint-SDF-start-symbols =
    prettyprint-unknown-start-symbols

  prettyprint-unknown-start-symbols =
    fail


strategies
  prettyprint-unknown =
    prettyprint-unknown-FCT

  prettyprint-unknown(|sort):
    t -> <prettyprint-unknown-FCT>
    where <?"FCT"> sort

  prettyprint-unknown-FCT :
    FCTAppComp(t1__, t2__) -> [ H(
                                  [SOpt(HS(), "0")]
                                , t1__'
                                )
                              , t2__'
                              ]
    with t1__' := <clean-layout-empty-symbols(
                   | ""
                   , FALSE()
                   , FALSE()
                   )
                   ; flatten-list> [ <check-nonterminal-isEmpty ; id
                                      <+ pp-H-list(prettyprint-unknown-NAME|" ")
                                      <+ pp-one-Z(prettyprint-completion-aux)> t1__
                                   ]
    with t2__' := <clean-layout-empty-symbols(
                   | ""
                   , FALSE()
                   , FALSE()
                   )
                   ; flatten-list
                   ; pp-indent(|"2")> [ <check-nonterminal-isEmpty ; id
                                         <+ pp-one-V(prettyprint-unknown-FCT)
                                         <+ pp-one-Z(prettyprint-completion-aux)> t2__
                                      ]

  is-unknown-FCT =
    ?FCTAppComp(_, _)

  unknown-get-indent :
    (t@FCTAppComp(t1__, t2__), index) -> indent
    where sort := <ia-get-sort> t
          ; <?"FCT"> sort
    with switch !index
           case ?1 :
             indent := ""
           case ?2 :
             indent := "  "
           otherwise :
             indent := ""
         end

  unknown-get-separator :
    (t@FCTAppComp(t1__, t2__), index) -> separator
    where sort := <ia-get-sort> t
          ; <?"FCT"> sort
    with switch !index
           case ?1 :
             separator := " "
           case ?2 :
             separator := ""
           otherwise :
             separator := ""
         end

  unknown-get-leading-ws :
    (t@FCTAppComp(t1__, t2__), index) -> ws
    where sort := <ia-get-sort> t
          ; <?"FCT"> sort
    with switch !index
           case ?1 :
             ws := ""
           case ?2 :
             ws := "\n  "
           otherwise :
             ws := ""
         end

  is-unknown-FCT =
    fail

  prettyprint-unknown-FCT :
    amb([h|hs]) -> <prettyprint-unknown-FCT> h

  prettyprint-unknown-NAME :
    NAME-Plhdr() -> [ H(
                        [SOpt(HS(), "0")]
                      , [S("[[NAME]]")]
                      )
                    ]

  is-unknown-NAME =
    ?NAME-Plhdr()

  prettyprint-unknown-FCT :
    FCT-Plhdr() -> [ H(
                       [SOpt(HS(), "0")]
                     , [S("[[FCT]]")]
                     )
                   ]

  is-unknown-FCT =
    ?FCT-Plhdr()

  prettyprint-unknown-NAME :
    NAME-Plhdr(_) -> [ H(
                         [SOpt(HS(), "0")]
                       , [S("[[NAME]]")]
                       )
                     ]

  is-unknown-NAME =
    ?NAME-Plhdr(_)

  prettyprint-unknown-FCT :
    FCT-Plhdr(_) -> [ H(
                        [SOpt(HS(), "0")]
                      , [S("[[FCT]]")]
                      )
                    ]

  is-unknown-FCT =
    ?FCT-Plhdr(_)