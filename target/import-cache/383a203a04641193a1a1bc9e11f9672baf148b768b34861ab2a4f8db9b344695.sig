Module("TL-Start",[Imports([Import("libstratego-gpp"),ImportWildcard("signatures"),Import("pp/TL-parenthesize"),Import("pp/TL-pp")]),Imports([]),Rules([SDefT("to-funcons",[],[],SRule(Rule(ToTerm([Var("(:E:)")]),ToTerm([Var("(:E:)")]),[]))),SDefT("to-funcons",[],[],SRule(Rule(ToTerm([Var("(:N:)")]),ToTerm([Var("(:N:)")]),[]))),SDefT("to-funcons",[],[],SRule(Rule(ToTerm([Var("(:X:)")]),ToTerm([Var("(:X:)")]),[]))),SDefT("to-funcons-lex",[],[],SRule(Rule(NoAnnoList(Op("FCTDoubleQuoted",[NoAnnoList(Op("L-int",[NoAnnoList(Op("LEX-int",[Var("str")]))]))])),NoAnnoList(Op("FCTString",[App(CallT(SVar("double-quote"),[],[]),Var("str"))])),[]))),SDefT("to-funcons",[],[],SRule(Rule(ToTerm([Var("(:N:)")]),ToTerm([Var("(:N:)")]),[]))),SDefT("to-funcons-lex",[],[],SRule(Rule(NoAnnoList(Op("FCTDoubleQuoted",[NoAnnoList(Op("L-id",[NoAnnoList(Op("LEX-id",[Var("str")]))]))])),NoAnnoList(Op("FCTString",[App(CallT(SVar("double-quote"),[],[]),Var("str"))])),[]))),SDefT("to-funcons",[],[],SRule(Rule(ToTerm([Var("(:X:)")]),ToTerm([Var("(:X:)")]),[])))])])