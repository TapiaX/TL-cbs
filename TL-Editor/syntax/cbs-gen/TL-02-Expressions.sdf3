module TL-02-Expressions
            
imports 
  TL-01-Lexical
  Funcons

// Language "TL"
    
lexical syntax // Language
  
  // #2 Expressions
                
  
  
syntax // Language
  
  // #2 Expressions
                
  
  
context-free syntax // Language
  
  // #2 Expressions
                
  
  L-exp.L-exp--L-aexp =
    L-aexp
  L-exp.L-exp--L-bexp =
    L-bexp
  
  L-aexp.L-aexp--L-id =
    L-id
  L-aexp.L-aexp--L-int =
    L-int
  L-aexp.L-aexp--L-aexp-PLUS-L-aexp =
    L-aexp "+" L-aexp
  L-aexp.L-aexp--L-aexp-DASH-L-aexp =
    L-aexp "-" L-aexp
  L-aexp.L-aexp--L-aexp-STAR-L-aexp =
    L-aexp "*" L-aexp
  L-aexp.L-aexp--L-aexp-SLASH-L-aexp =
    L-aexp "/" L-aexp
  L-aexp.L-aexp--LPAREN-L-aexp-RPAREN =
    "(" L-aexp ")"
  
  L-bexp.L-bexp--L-bool =
    L-bool
  L-bexp.L-bexp--R-no-L-bexp =
    "no" L-bexp
  L-bexp.L-bexp--L-bexp-R-or-L-bexp =
    L-bexp "or" L-bexp
  L-bexp.L-bexp--L-bexp-R-and-L-bexp =
    L-bexp "and" L-bexp
  L-bexp.L-bexp--L-aexp-LESS-L-aexp =
    L-aexp "<" L-aexp
  L-bexp.L-bexp--L-aexp-GREATER-L-aexp =
    L-aexp ">" L-aexp
  L-bexp.L-bexp--L-exp-EQUALS-EQUALS-L-exp =
    L-exp "==" L-exp
  L-bexp.L-bexp--LPAREN-L-bexp-RPAREN =
    "(" L-bexp ")"
  
  
context-free syntax // Semantics
  
  // #2 Expressions
                
  
  FCT.T-eval =
    "eval" "[:" L-exp ":]"
  FCT.T-eval-arith =
    "eval-arith" "[:" L-aexp ":]"
  FCT.T-eval-bool =
    "eval-bool" "[:" L-bexp ":]"
  
context-free syntax // Desugaring
  
  // #2 Expressions
                
  
  
variables // Meta-variables
  
  // #2 Expressions
                
  
  L-exp = "(:Exp" [1-9]? ":)" {prefer}
  L-exp? = "(:Exp" [1-9]? "?:)" {prefer}
  L-exp* = "(:Exp" [1-9]? "*:)" {prefer}
  L-exp+ = "(:Exp" [1-9]? "+:)" {prefer}
  L-aexp = "(:AExp" [1-9]? ":)" {prefer}
  L-aexp? = "(:AExp" [1-9]? "?:)" {prefer}
  L-aexp* = "(:AExp" [1-9]? "*:)" {prefer}
  L-aexp+ = "(:AExp" [1-9]? "+:)" {prefer}
  L-bexp = "(:BExp" [1-9]? ":)" {prefer}
  L-bexp? = "(:BExp" [1-9]? "?:)" {prefer}
  L-bexp* = "(:BExp" [1-9]? "*:)" {prefer}
  L-bexp+ = "(:BExp" [1-9]? "+:)" {prefer}
  
// SDF comments
  
  // #2 Expressions
                
  
  
sorts // ASTs
  T-start
