Module("nabl2/shared/common/constraints",[Imports([ImportWildcard("signatures/nabl2/shared/constraints"),Import("nabl2/shared/vars")]),Rules([RDefNoArgs("nabl2--free-constraint-vars",Rule(NoAnnoList(Op("CConj",[Var("c1"),Var("c2")])),Var(ListVar("v*")),[WithClause(Seq(Assign(Var(ListVar("v1*")),App(CallNoArgs(SVar("nabl2--free-constraint-vars")),Var("c1"))),Seq(Assign(Var(ListVar("v2*")),App(CallNoArgs(SVar("nabl2--free-constraint-vars")),Var("c2"))),Assign(Var(ListVar("v*")),App(Seq(CallNoArgs(SVar("conc")),Seq(CallNoArgs(SVar("strip-annos")),CallNoArgs(SVar("make-set")))),NoAnnoList(Tuple([Var(ListVar("v1*")),Var(ListVar("v2*"))])))))))])),RDefNoArgs("nabl2--free-constraint-vars",Rule(NoAnnoList(Op("CExists",[Var("evs"),Var("c")])),Var(ListVar("v*")),[WithClause(Seq(Assign(Var(ListVar("vc*")),App(CallNoArgs(SVar("nabl2--free-constraint-vars")),Var("c"))),Assign(Var(ListVar("v*")),App(Call(SVar("diff"),[Seq(CallNoArgs(SVar("strip-annos")),CallNoArgs(SVar("eq")))]),NoAnnoList(Tuple([Var(ListVar("vc*")),Var("evs")]))))))])),RDefNoArgs("nabl2--free-constraint-vars",RuleNoCond(Var("c"),App(CallNoArgs(SVar("nabl2--all-vars")),Var("c")))),RDefNoArgs("nabl2--normalize-constraint",RuleNoCond(NoAnnoList(Op("CConj",[NoAnnoList(Op("CConj",[Var("c1"),Var("c2")])),Var("c3")])),App(CallNoArgs(SVar("nabl2--normalize-constraint")),NoAnnoList(Op("CConj",[Var("c1"),NoAnnoList(Op("CConj",[Var("c2"),Var("c3")]))]))))),RDefNoArgs("nabl2--normalize-constraint",RuleNoCond(NoAnnoList(Op("CConj",[Var("c1"),Var("c2")])),NoAnnoList(Op("CConj",[Var("c1"),App(CallNoArgs(SVar("nabl2--normalize-constraint")),Var("c2"))])))),RDefNoArgs("nabl2--normalize-constraint",RuleNoCond(NoAnnoList(Op("CExists",[Var("evs"),Var("c")])),NoAnnoList(Op("CExists",[Var("evs"),App(CallNoArgs(SVar("nabl2--normalize-constraint")),Var("c"))])))),RDefNoArgs("nabl2--normalize-constraint",RuleNoCond(Var("c"),Var("c"))),RDefNoArgs("nabl2--make-cconj",RuleNoCond(NoAnnoList(List([Var("c")])),Var("c"))),RDefNoArgs("nabl2--make-cconj",RuleNoCond(NoAnnoList(ListTail([Var("c")],Var("cs"))),NoAnnoList(Op("CConj",[Var("c"),App(CallNoArgs(SVar("nabl2--make-cconj")),Var("cs"))])))),RDefNoArgs("nabl2--make-cconj",RuleNoCond(NoAnnoList(List([])),RootApp(CallT(SVar("fatal-err"),[],[NoAnnoList(Str("\"Cannot make conjunction from empty list.\""))])))),RDefNoArgs("nabl2--make-cexists",RuleNoCond(NoAnnoList(Tuple([Var("vars"),Var("c")])),NoAnnoList(Op("CExists",[Var("vars"),Var("c")])))),RDefNoArgs("nabl2--make-cexists",RuleNoCond(NoAnnoList(Tuple([NoAnnoList(List([])),Var("c")])),Var("c")))])])