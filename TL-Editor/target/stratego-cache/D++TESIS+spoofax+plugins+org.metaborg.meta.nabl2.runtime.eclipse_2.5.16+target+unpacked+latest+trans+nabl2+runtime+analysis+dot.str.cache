Module("nabl2/runtime/analysis/dot",[Imports([Import("signatures/nabl2/runtime/analysis/Debug-sig"),Import("nabl2/runtime/pp")]),Rules([RDefNoArgs("scope-graph-to-dot",Rule(NoAnnoList(Op("ScopeGraph",[Var("entries")])),NoAnnoList(StringQuotation1("  ",[QStr("digraph scope_graph {\n  layout=sfdp;\n  overlap=scale;\n  rankdir=\"BT\";\n  "),StringEscape1("  ",Var("scopes")),QStr("\n}")])),[WithClause(Assign(Var("scopes"),App(Seq(Call(SVar("map"),[CallNoArgs(SVar("scope-to-dot"))]),CallNoArgs(SVar("lines"))),Var("entries"))))]))]),Rules([RDefNoArgs("scope-to-dot",Rule(NoAnnoList(Op("Scope",[Var("scope"),Var("entries")])),NoAnnoList(StringQuotation4("  ",[QStr("\n  \""),StringEscape4("   ",Var("name")),QStr("\" [shape=\"ellipse\"];\n  "),StringEscape4("  ",Var("edges-dot")),QStr("\n  { rank=\"same\";\n    "),StringEscape4("    ",Var("decls-dot")),QStr("\n    "),StringEscape4("    ",Var("refs-dot")),QStr("\n    "),StringEscape4("    ",Var("exports-dot")),QStr("\n  }\n  {\n    "),StringEscape4("    ",Var("imports-dot")),QStr("\n  }\n")])),[WithClause(Seq(Assign(Var("name"),App(Seq(CallNoArgs(SVar("pp-NaBL2-CTerm")),CallNoArgs(SVar("escape"))),Var("scope"))),Seq(Assign(Var("decls-dot"),App(Seq(Call(SVar("filter"),[CallT(SVar("decls-to-dot"),[],[Var("name")])]),CallNoArgs(SVar("lines"))),Var("entries"))),Seq(Assign(Var("refs-dot"),App(Seq(Call(SVar("filter"),[CallT(SVar("refs-to-dot"),[],[Var("name")])]),CallNoArgs(SVar("lines"))),Var("entries"))),Seq(Assign(Var("edges-dot"),App(Seq(Call(SVar("filter"),[CallT(SVar("edges-to-dot"),[],[Var("name")])]),CallNoArgs(SVar("lines"))),Var("entries"))),Seq(Assign(Var("exports-dot"),App(Seq(Call(SVar("filter"),[CallT(SVar("exports-to-dot"),[],[Var("name")])]),CallNoArgs(SVar("lines"))),Var("entries"))),Assign(Var("imports-dot"),App(Seq(Call(SVar("filter"),[CallT(SVar("imports-to-dot"),[],[Var("name")])]),CallNoArgs(SVar("lines"))),Var("entries")))))))))]))]),Rules([RDefT("decls-to-dot",[],[DefaultVarDec("scope-name")],Rule(NoAnnoList(Op("Decls",[Var("entries")])),Var("decls-dot"),[WithClause(Assign(Var("decls-dot"),App(Seq(Call(SVar("map"),[CallT(SVar("decl-to-dot"),[],[Var("scope-name")])]),CallNoArgs(SVar("lines"))),Var("entries"))))])),RDefT("decl-to-dot",[],[DefaultVarDec("scope-name")],Rule(NoAnnoList(Op("Decl",[Var("decl"),Var("type")])),NoAnnoList(StringQuotation2("  ",[QStr("\n  \""),StringEscape2("   ",Var("name")),QStr("\" [shape=\"box\"];\n  \""),StringEscape2("   ",Var("scope-name")),QStr("\" -> \""),StringEscape2("                     ",Var("name")),QStr("\";\n  "),StringEscape2("  ",Var("type-dot")),QStr("\n")])),[WithClause(Seq(Assign(Var("name"),App(Seq(CallNoArgs(SVar("pp-NaBL2-CTerm")),CallNoArgs(SVar("escape"))),Var("decl"))),Assign(Var("type-dot"),App(CallT(SVar("decl-type-to-dot"),[],[Var("name")]),Var("type")))))])),RDefT("decl-type-to-dot",[],[DefaultVarDec("decl-name")],RuleNoCond(NoAnnoList(Op("NoType",[])),NoAnnoList(Str("\"\"")))),RDefT("decl-type-to-dot",[],[DefaultVarDec("decl-name")],RuleNoCond(NoAnnoList(Op("Type",[Var("type")])),NoAnnoList(StringQuotation2("  ",[QStr("\n")]))))]),Rules([RDefT("refs-to-dot",[],[DefaultVarDec("scope-name")],Rule(NoAnnoList(Op("Refs",[Var("entries")])),Var("refs-dot"),[WithClause(Assign(Var("refs-dot"),App(Seq(Call(SVar("map"),[CallT(SVar("ref-to-dot"),[],[Var("scope-name")])]),CallNoArgs(SVar("lines"))),Var("entries"))))])),RDefT("ref-to-dot",[],[DefaultVarDec("scope-name")],Rule(NoAnnoList(Op("Ref",[Var("ref")])),NoAnnoList(StringQuotation2("  ",[QStr("\n  \""),StringEscape2("   ",Var("name")),QStr("\" [shape=\"box\"];\n  \""),StringEscape2("   ",Var("name")),QStr("\" -> \""),StringEscape2("               ",Var("scope-name")),QStr("\";\n")])),[WithClause(Assign(Var("name"),App(Seq(CallNoArgs(SVar("pp-NaBL2-CTerm")),CallNoArgs(SVar("escape"))),Var("ref"))))]))]),Rules([RDefT("edges-to-dot",[],[DefaultVarDec("scope-name")],Rule(NoAnnoList(Op("DirectEdges",[Var("entries")])),Var("edges-dot"),[WithClause(Assign(Var("edges-dot"),App(Seq(Call(SVar("map"),[CallT(SVar("edge-to-dot"),[],[Var("scope-name")])]),CallNoArgs(SVar("lines"))),Var("entries"))))])),RDefT("edge-to-dot",[],[DefaultVarDec("scope-name")],Rule(NoAnnoList(Op("DirectEdge",[Var("lbl"),Var("scope")])),NoAnnoList(StringQuotation2("  ",[QStr("\n  \""),StringEscape2("   ",Var("scope-name")),QStr("\" -> \""),StringEscape2("                     ",Var("name")),QStr("\" [label=\""),StringEscape2("                                     ",Var("lbl'")),QStr("\"];\n")])),[WithClause(Seq(Assign(Var("lbl'"),App(Seq(CallNoArgs(SVar("pp-NaBL2-PathLabel")),CallNoArgs(SVar("escape"))),Var("lbl"))),Assign(Var("name"),App(Seq(CallNoArgs(SVar("pp-NaBL2-CTerm")),CallNoArgs(SVar("escape"))),Var("scope")))))]))]),Rules([RDefT("exports-to-dot",[],[DefaultVarDec("scope-name")],Rule(NoAnnoList(Op("AssocEdges",[Var("entries")])),Var("exports-dot"),[WithClause(Assign(Var("exports-dot"),App(Seq(Call(SVar("map"),[CallT(SVar("export-to-dot"),[],[Var("scope-name")])]),CallNoArgs(SVar("lines"))),Var("entries"))))])),RDefT("export-to-dot",[],[DefaultVarDec("scope-name")],Rule(NoAnnoList(Op("AssocEdge",[Var("lbl"),Var("decl")])),NoAnnoList(StringQuotation2("  ",[QStr("\n  \""),StringEscape2("   ",Var("name")),QStr("\" -> \""),StringEscape2("               ",Var("scope-name")),QStr("\" [label=\""),StringEscape2("                                     ",Var("lbl'")),QStr("\",arrowhead=\"onormal\"]\n")])),[WithClause(Seq(Assign(Var("lbl'"),App(Seq(CallNoArgs(SVar("pp-NaBL2-PathLabel")),CallNoArgs(SVar("escape"))),Var("lbl"))),Assign(Var("name"),App(Seq(CallNoArgs(SVar("pp-NaBL2-CTerm")),CallNoArgs(SVar("escape"))),Var("decl")))))]))]),Rules([RDefT("imports-to-dot",[],[DefaultVarDec("scope-name")],Rule(NoAnnoList(Op("ImportEdges",[Var("entries")])),Var("imports-dot"),[WithClause(Assign(Var("imports-dot"),App(Seq(Call(SVar("map"),[CallT(SVar("import-to-dot"),[],[Var("scope-name")])]),CallNoArgs(SVar("lines"))),Var("entries"))))])),RDefT("import-to-dot",[],[DefaultVarDec("scope-name")],Rule(NoAnnoList(Op("ImportEdge",[Var("lbl"),Var("decl")])),NoAnnoList(StringQuotation2("  ",[QStr("\n  \""),StringEscape2("   ",Var("scope-name")),QStr("\" -> \""),StringEscape2("                     ",Var("name")),QStr("\" [label=\""),StringEscape2("                                     ",Var("lbl'")),QStr("\",arrowhead=\"onormal\",constraint=\"false\"]\n")])),[WithClause(Seq(Assign(Var("lbl'"),App(Seq(CallNoArgs(SVar("pp-NaBL2-PathLabel")),CallNoArgs(SVar("escape"))),Var("lbl"))),Assign(Var("name"),App(Seq(CallNoArgs(SVar("pp-NaBL2-CTerm")),CallNoArgs(SVar("escape"))),Var("decl")))))]))])])