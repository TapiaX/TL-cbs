Module("libspoofax/sdf/pp",[Imports([Import("libstratego-gpp"),Import("libspoofax/term/annotation")]),Signature([Constructors([OpDecl("inj",FunType([ConstType(SortNoArgs("String")),ConstType(SortNoArgs("String"))],ConstType(SortNoArgs("Anno"))))])]),Rules([SDefNoArgs("ia-get-sort",Prim("\"SSL_EXT_get_sort_imploder_attachment\"",[RootApp(Id)])),SDef("explicate-injections",[DefaultVarDec("inj-name")],PrimT("\"SSL_EXT_explicate_injections\"",[CallNoArgs(SVar("inj-name"))],[])),SDefNoArgs("remove-injections",Call(SVar("bottomup"),[Call(SVar("try"),[LRule(Rule(NoAnnoList(Explode(Var("c"),NoAnnoList(List([Var("t")])))),Var("t"),Call(SVar("get-annotation"),[Match(NoAnnoList(Op("inj",[Wld,Wld])))])))])]))]),Signature([Constructors([OpDecl("Parenthetical",FunType([ConstType(SortNoArgs("Unknown"))],ConstType(SortNoArgs("Unknown")))),OpDecl("Offside",FunType([ConstType(SortNoArgs("ConstraintTreeReference")),ConstType(Sort("List",[SortNoArgs("ConstraintTreeReference")]))],ConstType(SortNoArgs("ShortConstraint")))),OpDecl("Indent",FunType([ConstType(SortNoArgs("ConstraintTreeReference")),ConstType(Sort("List",[SortNoArgs("ConstraintTreeReference")]))],ConstType(SortNoArgs("ShortConstraint")))),OpDecl("NewLineIndent",FunType([ConstType(SortNoArgs("ConstraintTreeReference")),ConstType(Sort("List",[SortNoArgs("ConstraintTreeReference")]))],ConstType(SortNoArgs("ShortConstraint")))),OpDecl("NewLineIndentBy",FunType([ConstType(SortNoArgs("NatCon")),ConstType(SortNoArgs("ConstraintTreeReference")),ConstType(Sort("List",[SortNoArgs("ConstraintTreeReference")]))],ConstType(SortNoArgs("ShortConstraint")))),OpDecl("NewLine",FunType([ConstType(SortNoArgs("ConstraintTreeReference"))],ConstType(SortNoArgs("ShortConstraint")))),OpDecl("NewLineBy",FunType([ConstType(SortNoArgs("NatCon")),ConstType(SortNoArgs("ConstraintTreeReference"))],ConstType(SortNoArgs("ShortConstraint")))),OpDecl("Align",FunType([ConstType(SortNoArgs("ConstraintTreeReference")),ConstType(Sort("List",[SortNoArgs("ConstraintTreeReference")]))],ConstType(SortNoArgs("ShortConstraint")))),OpDecl("Align",FunType([ConstType(SortNoArgs("ConstraintTreeReference"))],ConstType(SortNoArgs("ShortConstraint")))),OpDecl("PosRef",FunType([ConstType(SortNoArgs("NatCon"))],ConstType(SortNoArgs("ConstraintTreeReference")))),OpDecl("LiteralRef",FunType([ConstType(SortNoArgs("StrCon"))],ConstType(SortNoArgs("ConstraintTreeReference")))),OpDecl("LabelRef",FunType([ConstType(SortNoArgs("IdCon"))],ConstType(SortNoArgs("ConstraintTreeReference"))))])]),Strategies([SDef("pp-one",[DefaultVarDec("pp")],Seq(LChoice(CallNoArgs(SVar("pp")),Match(NoAnnoList(Op("Parenthetical",[RootApp(CallNoArgs(SVar("pp")))])))),Call(SVar("filter"),[CallNoArgs(SVar("gpp-is-real-vbox"))]))),SDef("pp-one-V",[DefaultVarDec("pp")],Seq(Call(SVar("pp-one"),[CallNoArgs(SVar("pp"))]),LChoice(Match(NoAnnoList(List([]))),Build(NoAnnoList(Op("V",[NoAnnoList(List([])),RootApp(Id)])))))),SDef("pp-one-Z",[DefaultVarDec("pp")],Seq(Call(SVar("pp-one"),[CallNoArgs(SVar("pp"))]),LChoice(Match(NoAnnoList(List([]))),Build(NoAnnoList(Op("Z",[NoAnnoList(List([])),RootApp(Id)])))))),SDef("pp-option",[DefaultVarDec("pp")],LChoice(Seq(CallNoArgs(SVar("is-string")),CallNoArgs(SVar("pp"))),Choice(LRule(RuleNoCond(NoAnnoList(Op("None",[])),NoAnnoList(List([])))),Match(NoAnnoList(Op("Some",[RootApp(CallNoArgs(SVar("pp")))])))))),SDef("pp-V-list",[DefaultVarDec("pp")],LChoice(Match(NoAnnoList(List([]))),Build(NoAnnoList(Op("V",[NoAnnoList(List([])),RootApp(Call(SVar("map"),[Call(SVar("pp-one-V"),[CallNoArgs(SVar("pp"))])]))]))))),SDefT("pp-V-list",[DefaultVarDec("pp")],[DefaultVarDec("vs")],LChoice(Match(NoAnnoList(List([]))),Build(NoAnnoList(Op("V",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("VS",[])),Var("vs")]))])),RootApp(Call(SVar("map"),[Call(SVar("pp-one-V"),[CallNoArgs(SVar("pp"))])]))]))))),SDefT("pp-V-list",[DefaultVarDec("pp")],[DefaultVarDec("vs"),DefaultVarDec("sep")],LChoice(Match(NoAnnoList(List([]))),Build(NoAnnoList(Op("V",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("VS",[])),Var("vs")]))])),RootApp(Seq(Call(SVar("map"),[Call(SVar("pp-one-V"),[CallNoArgs(SVar("pp"))])]),Call(SVar("at-init"),[CallT(SVar("add-sep"),[],[Var("sep")]),Id])))]))))),SDefT("pp-indent",[],[DefaultVarDec("'is")],Seq(Call(SVar("filter"),[CallNoArgs(SVar("gpp-is-real-vbox"))]),LChoice(Match(NoAnnoList(List([]))),Build(NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),Var("'is")]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"\""))])),NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),RootApp(Call(SVar("map"),[CallT(SVar("indent-Z-boxes"),[],[Var("'is")])]))]))]))])))))),RDefT("indent-Z-boxes",[],[DefaultVarDec("'is")],Rule(AnnoList(Op("H",[Var("opt"),AnnoList(Var("boxes"),[Var(ListVar("l*"))])]),[Var(ListVar("a*"))]),AnnoList(Op("H",[Var("opt"),AnnoList(Var("new-boxes"),[Var(ListVar("l*"))])]),[Var(ListVar("a*"))]),[WithClause(Assign(Var("new-boxes"),App(Call(SVar("map"),[CallT(SVar("indent-Z-boxes"),[],[Var("'is")])]),Var("boxes"))))])),RDefT("indent-Z-boxes",[],[DefaultVarDec("'is")],Rule(AnnoList(Op("V",[Var("opt"),AnnoList(Var("boxes"),[Var(ListVar("l*"))])]),[Var(ListVar("a*"))]),AnnoList(Op("V",[Var("opt"),AnnoList(Var("new-boxes"),[Var(ListVar("l*"))])]),[Var(ListVar("a*"))]),[WithClause(Assign(Var("new-boxes"),App(Call(SVar("map"),[CallT(SVar("indent-Z-boxes"),[],[Var("'is")])]),Var("boxes"))))])),RDefT("indent-Z-boxes",[],[DefaultVarDec("'is")],RuleNoCond(As(Var("s"),NoAnnoList(Op("S",[Wld]))),Var("s"))),RDefT("indent-Z-boxes",[],[DefaultVarDec("'is")],RuleNoCond(NoAnnoList(List([])),NoAnnoList(List([])))),RDefT("indent-Z-boxes",[],[DefaultVarDec("'is")],RuleNoCond(As(Var("z"),NoAnnoList(Op("Z",[NoAnnoList(List([])),NoAnnoList(List([]))]))),Var("z"))),RDefT("indent-Z-boxes",[],[DefaultVarDec("'is")],Rule(AnnoList(Op("Z",[NoAnnoList(List([])),AnnoList(ListTail([AnnoList(Var("b"),[Var(ListVar("b-annos*"))])],Var("bs")),[Var(ListVar("l*"))])]),[Var(ListVar("a*"))]),AnnoList(Op("Z",[NoAnnoList(List([])),AnnoList(ListTail([AnnoList(Var("b'"),[Var(ListVar("b-annos*"))])],Var("bs'")),[Var(ListVar("l*"))])]),[Var(ListVar("a*"))]),[WithClause(Seq(Assign(Var("b'"),App(CallT(SVar("indent-Z-boxes"),[],[Var("'is")]),Var("b"))),Assign(Var("bs'"),App(Call(SVar("map"),[CallT(SVar("indent-boxes-list"),[],[Var("'is")])]),Var("bs")))))])),RDefT("indent-boxes-list",[],[DefaultVarDec("'is")],Rule(AnnoList(Var("b"),[Var(ListVar("a*"))]),NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),Var("'is")]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"\""))])),AnnoList(Var("b'"),[Var(ListVar("a*"))])]))])),[WithClause(Assign(Var("b'"),App(CallT(SVar("indent-Z-boxes"),[],[Var("'is")]),Var("b"))))])),SDef("pp-H-list",[DefaultVarDec("pp")],LChoice(Match(NoAnnoList(List([]))),Build(NoAnnoList(Op("H",[NoAnnoList(List([])),RootApp(Call(SVar("map"),[Call(SVar("pp-one-Z"),[CallNoArgs(SVar("pp"))])]))]))))),SDefT("pp-H-list",[DefaultVarDec("pp")],[DefaultVarDec("sep")],LChoice(Match(NoAnnoList(List([]))),Build(NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),RootApp(Seq(Call(SVar("map"),[Call(SVar("pp-one-Z"),[CallNoArgs(SVar("pp"))])]),CallT(SVar("separate-by"),[],[NoAnnoList(Op("S",[Var("sep")]))])))]))))),SDef("pp-HV-list",[DefaultVarDec("pp")],LChoice(Match(NoAnnoList(List([]))),Build(NoAnnoList(Op("HV",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),RootApp(Call(SVar("map"),[Call(SVar("pp-one-Z"),[CallNoArgs(SVar("pp"))])]))]))))),SDefT("pp-HV-list",[DefaultVarDec("pp")],[DefaultVarDec("sep")],LChoice(Match(NoAnnoList(List([]))),Build(NoAnnoList(Op("HV",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),RootApp(Seq(Call(SVar("map"),[Call(SVar("pp-one-Z"),[CallNoArgs(SVar("pp"))])]),CallT(SVar("separate-by"),[],[NoAnnoList(Op("S",[Var("sep")]))])))]))))),SDef("pp-HZ-list",[DefaultVarDec("pp")],LChoice(Match(NoAnnoList(List([]))),Build(NoAnnoList(Op("HZ",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),RootApp(Call(SVar("map"),[Call(SVar("pp-one-Z"),[CallNoArgs(SVar("pp"))])]))]))))),SDefT("pp-HZ-list",[DefaultVarDec("pp")],[DefaultVarDec("sep")],LChoice(Match(NoAnnoList(List([]))),Build(NoAnnoList(Op("HZ",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),RootApp(Seq(Call(SVar("map"),[Call(SVar("pp-one-Z"),[CallNoArgs(SVar("pp"))])]),CallT(SVar("separate-by"),[],[NoAnnoList(Op("S",[Var("sep")]))])))])))))]),Signature([Constructors([OpDecl("CURSOR_ELEMENT",ConstType(SortVar("cursor")))])]),Rules([SDefNoArgs("prettyprint-origin-term",Fail),SDefNoArgs("prettyprint-completion-aux",LChoice(Seq(Match(NoAnnoList(Op("CURSOR_ELEMENT",[]))),Build(NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"##CURSOR##\""))]))])))),LChoice(Seq(Match(NoAnnoList(Str("\"\""))),Build(NoAnnoList(List([])))),Build(NoAnnoList(List([NoAnnoList(Op("S",[RootApp(CallNoArgs(SVar("is-string")))]))]))))))]),Signature([Constructors([OpDecl("FALSE",ConstType(SortNoArgs("BooleanCondition"))),OpDecl("TRUE",ConstType(SortNoArgs("BooleanCondition")))])]),Rules([SDefNoArgs("check-nonterminal-isEmpty",LChoice(Match(NoAnnoList(Op("None",[]))),LChoice(Match(NoAnnoList(Tuple([]))),Match(NoAnnoList(List([])))))),RDefT("clean-layout-empty-symbols",[],[DefaultVarDec("pred-layout"),DefaultVarDec("read-empty"),DefaultVarDec("read-non-empty")],Rule(NoAnnoList(ListTail([Var("h")],Var("hs"))),App(CallT(SVar("clean-layout-empty-symbols"),[],[Var("pred-layout'"),Var("read-empty"),Var("read-non-empty")]),Var("hs")),Seq(BA(Match(NoAnnoList(Op("FALSE",[]))),Var("read-empty")),Seq(Assign(Var("layout-string"),App(Seq(Match(NoAnnoList(Op("S",[RootApp(Id)]))),CallNoArgs(SVar("is-layout-string"))),Var("h"))),Assign(Var("pred-layout'"),App(CallNoArgs(SVar("conc-strings")),NoAnnoList(Tuple([Var("pred-layout"),Var("layout-string")])))))))),RDefT("clean-layout-empty-symbols",[],[DefaultVarDec("pred-layout"),DefaultVarDec("read-empty"),DefaultVarDec("read-non-empty")],Rule(NoAnnoList(ListTail([Var("h")],Var("hs"))),App(CallT(SVar("clean-layout-empty-symbols"),[],[Var("pred-layout"),Var("read-empty"),Var("read-non-empty")]),Var("hs")),Seq(BA(Match(NoAnnoList(Op("TRUE",[]))),Var("read-empty")),Assign(Var("layout-string"),App(Seq(Match(NoAnnoList(Op("S",[RootApp(Id)]))),CallNoArgs(SVar("is-layout-string"))),Var("h")))))),RDefT("clean-layout-empty-symbols",[],[DefaultVarDec("pred-layout"),DefaultVarDec("read-empty"),DefaultVarDec("read-non-empty")],Rule(NoAnnoList(ListTail([Var("h")],Var("hs"))),NoAnnoList(List([NoAnnoList(Op("S",[Var("pred-layout")])),Var("h"),App(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("TRUE",[]))]),Var("hs"))])),BA(Not(LChoice(CallNoArgs(SVar("check-nonterminal-isEmpty")),Seq(Match(NoAnnoList(Op("S",[RootApp(Id)]))),CallNoArgs(SVar("is-layout-string"))))),Var("h")))),RDefT("clean-layout-empty-symbols",[],[DefaultVarDec("pred-layout"),DefaultVarDec("read-empty"),DefaultVarDec("read-non-empty")],Rule(NoAnnoList(ListTail([Var("h")],Var("hs"))),App(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\" \"")),NoAnnoList(Op("TRUE",[])),Var("read-non-empty")]),Var("hs")),Seq(BA(Match(NoAnnoList(Op("TRUE",[]))),Var("read-non-empty")),BA(CallNoArgs(SVar("check-nonterminal-isEmpty")),Var("h"))))),RDefT("clean-layout-empty-symbols",[],[DefaultVarDec("pred-layout"),DefaultVarDec("read-empty"),DefaultVarDec("read-non-empty")],Rule(NoAnnoList(ListTail([Var("h")],Var("hs"))),App(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("TRUE",[])),Var("read-non-empty")]),Var("hs")),Seq(BA(Match(NoAnnoList(Op("FALSE",[]))),Var("read-non-empty")),BA(CallNoArgs(SVar("check-nonterminal-isEmpty")),Var("h"))))),RDefT("clean-layout-empty-symbols",[],[DefaultVarDec("pred-layout"),DefaultVarDec("read-empty"),DefaultVarDec("read-non-empty")],RuleNoCond(NoAnnoList(List([])),NoAnnoList(List([])))),RDefNoArgs("is-layout-string",Rule(Var("s"),Var("s"),BA(Seq(CallNoArgs(SVar("explode-string")),Call(SVar("map"),[CallNoArgs(SVar("is-whitespace"))])),Var("s"))))]),Rules([RDefT("add-sep",[],[DefaultVarDec("sep")],Rule(NoAnnoList(Op("V",[Var("vs"),Var("boxes")])),NoAnnoList(Op("V",[Var("vs"),Var("result")])),CondChoice(Assign(NoAnnoList(List([Var("h")])),Var("boxes")),Seq(Assign(NoAnnoList(Tuple([Var("c"),NoAnnoList(List([Var("cs"),Var("inner-boxes")]))])),App(CallNoArgs(SVar("explode-term")),Var("h"))),Seq(Assign(Var("box-with-sep"),App(CallNoArgs(SVar("mkterm")),NoAnnoList(Tuple([Var("c"),NoAnnoList(List([Var("cs"),App(CallNoArgs(SVar("conc")),NoAnnoList(Tuple([Var("inner-boxes"),NoAnnoList(List([NoAnnoList(Op("S",[Var("sep")]))]))])))]))])))),Assign(Var("result"),NoAnnoList(List([Var("box-with-sep")]))))),Seq(Assign(Var("result'"),NoAnnoList(List([App(Seq(CallNoArgs(SVar("last")),CallT(SVar("add-sep"),[],[Var("sep")])),Var("boxes"))]))),Assign(Var("result"),App(Call(SVar("at-last"),[Build(Var("result'"))]),Var("boxes"))))))),RDefT("add-sep",[],[DefaultVarDec("sep")],Rule(NoAnnoList(Op("H",[Var("options"),Var("boxes")])),NoAnnoList(Op("H",[Var("options"),Var("result")])),Assign(Var("result"),App(CallNoArgs(SVar("conc")),NoAnnoList(Tuple([Var("boxes"),NoAnnoList(List([NoAnnoList(Op("S",[Var("sep")]))]))])))))),RDefT("add-sep",[],[DefaultVarDec("sep")],Rule(NoAnnoList(Op("I",[Var("'is"),NoAnnoList(Op("H",[Var("hs"),Var("boxes")]))])),NoAnnoList(Op("I",[Var("'is"),NoAnnoList(Op("H",[Var("hs"),Var("result")]))])),Assign(Var("result"),App(CallNoArgs(SVar("conc")),NoAnnoList(Tuple([Var("boxes"),NoAnnoList(List([NoAnnoList(Op("S",[Var("sep")]))]))])))))),RDefT("add-sep",[],[DefaultVarDec("sep")],Rule(NoAnnoList(Op("HV",[Var("hs"),Var("boxes")])),NoAnnoList(Op("HV",[Var("hs"),Var("result")])),Assign(Var("result"),App(CallNoArgs(SVar("conc")),NoAnnoList(Tuple([Var("boxes"),NoAnnoList(List([NoAnnoList(Op("S",[Var("sep")]))]))])))))),RDefT("add-sep",[],[DefaultVarDec("sep")],Rule(NoAnnoList(Op("HZ",[Var("hs"),Var("boxes")])),NoAnnoList(Op("HV",[Var("hs"),Var("result")])),Assign(Var("result"),App(CallNoArgs(SVar("conc")),NoAnnoList(Tuple([Var("boxes"),NoAnnoList(List([NoAnnoList(Op("S",[Var("sep")]))]))])))))),RDefT("add-sep",[],[DefaultVarDec("sep")],Rule(NoAnnoList(Op("Z",[Var("hs"),Var("boxes")])),NoAnnoList(Op("HV",[Var("hs"),Var("result")])),Assign(Var("result"),App(CallNoArgs(SVar("conc")),NoAnnoList(Tuple([Var("boxes"),NoAnnoList(List([NoAnnoList(Op("S",[Var("sep")]))]))]))))))])])