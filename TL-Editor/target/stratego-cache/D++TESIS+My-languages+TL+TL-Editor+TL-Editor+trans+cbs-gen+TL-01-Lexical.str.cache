Module("TL-01-Lexical",[Imports([Import("libstratego-gpp"),ImportWildcard("signatures"),Import("pp/TL-parenthesize"),Import("pp/TL-pp")]),Imports([Import("cbs-gen/TL-02-Expressions")]),Rules([RDefNoArgs("to-funcons-lex",RuleNoCond(NoAnnoList(Op("FCTDoubleQuoted",[NoAnnoList(Op("L-int",[NoAnnoList(Op("LEX-int",[Var("str")]))]))])),NoAnnoList(Op("FCTString",[App(CallNoArgs(SVar("double-quote")),Var("str"))])))),RDefNoArgs("to-funcons",RuleNoCond(NoAnnoList(Op("T-int",[Var("(:N:)")])),NoAnnoList(Op("FCTApp",[NoAnnoList(Str("decimal")),NoAnnoList(Op("FCTDoubleQuoted",[NoAnnoList(Op("L-int",[Var("(:N:)")]))]))])))),RDefNoArgs("to-funcons-lex",RuleNoCond(NoAnnoList(Op("FCTDoubleQuoted",[NoAnnoList(Op("L-id",[NoAnnoList(Op("LEX-id",[Var("str")]))]))])),NoAnnoList(Op("FCTString",[App(CallNoArgs(SVar("double-quote")),Var("str"))])))),RDefNoArgs("to-funcons",RuleNoCond(NoAnnoList(Op("T-id",[Var("(:ID:)")])),NoAnnoList(Op("FCTDoubleQuoted",[NoAnnoList(Op("L-id",[Var("(:ID:)")]))])))),RDefNoArgs("to-funcons-lex",RuleNoCond(NoAnnoList(Op("FCTDoubleQuoted",[NoAnnoList(Op("L-bool",[NoAnnoList(Op("LEX-bool",[Var("str")]))]))])),NoAnnoList(Op("FCTString",[App(CallNoArgs(SVar("double-quote")),Var("str"))])))),RDefNoArgs("to-funcons",RuleNoCond(NoAnnoList(Op("T-val-bool",[NoAnnoList(Op("LEX-bool",[NoAnnoList(Str("true"))]))])),NoAnnoList(Op("FCTName",[NoAnnoList(Str("true"))])))),RDefNoArgs("to-funcons",RuleNoCond(NoAnnoList(Op("T-val-bool",[NoAnnoList(Op("LEX-bool",[NoAnnoList(Str("false"))]))])),NoAnnoList(Op("FCTName",[NoAnnoList(Str("false"))]))))])])