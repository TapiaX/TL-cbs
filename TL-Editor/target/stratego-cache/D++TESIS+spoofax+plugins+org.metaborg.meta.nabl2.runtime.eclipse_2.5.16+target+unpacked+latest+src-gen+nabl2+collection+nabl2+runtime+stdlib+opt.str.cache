Module("nabl2/runtime/stdlib/opt",[Imports([ImportWildcard("signatures/nabl2/shared"),ImportWildcard("signatures/nabl2/shared/common"),ImportWildcard("signatures/nabl2/shared/constraints"),ImportWildcard("nabl2/shared"),ImportWildcard("signatures/nabl2/runtime"),ImportWildcard("signatures/nabl2/runtime/analysis"),ImportWildcard("signatures/nabl2/runtime/common"),ImportWildcard("nabl2/runtime"),ImportWildcard("nabl2/runtime/analysis"),ImportWildcard("nabl2/runtime/prelude"),ImportWildcard("nabl2/runtime/stdlib")]),Rules([]),Rules([]),Rules([]),Rules([RDefT("nabl2--generate-constraint-Opt0-rule",[],[],Rule(NoAnnoList(Tuple([Var("nabl2_source"),As(Var("term13"),Var("opt")),Var("args18")])),Var("constraint15"),[WithClause(Id),WithClause(LChoice(Assign(NoAnnoList(Op("Params",[As(Var("params27"),NoAnnoList(Tuple([])))])),Var("args18")),CallT(SVar("fatal-err"),[],[App(CallNoArgs(SVar("concat-strings")),NoAnnoList(List([NoAnnoList(Str("\"Cannot match expected \"")),NoAnnoList(Str("\"^ ()\"")),NoAnnoList(Str("\" with actual \"")),App(CallNoArgs(SVar("nabl2--pp-flat-args")),Var("args18")),NoAnnoList(Str("\" when matching \"")),NoAnnoList(Str("\"opt\"")),NoAnnoList(Str("\" with \"")),App(CallNoArgs(SVar("pp-NaBL2-Term")),Var("term13")),NoAnnoList(Str("\".\""))])))]))),WithClause(IfThen(CallNoArgs(SVar("nabl2--is-debug-collection-enabled")),CallT(SVar("nabl2--collection-info-msg"),[],[App(CallNoArgs(SVar("concat-strings")),NoAnnoList(List([NoAnnoList(Str("\"Opt0\"")),NoAnnoList(Str("\" [[ \"")),App(CallNoArgs(SVar("pp-NaBL2-Term")),Var("term13")),NoAnnoList(Str("\" ^ \"")),App(CallNoArgs(SVar("pp-NaBL2-CTerm")),Var("params27")),NoAnnoList(Str("\" ]]\""))])))]))),WithClause(Assign(Var("constraint15"),NoAnnoList(Op("CConj",[NoAnnoList(Op("CAstProperty",[App(CallNoArgs(SVar("nabl2--get-ast-index")),Var("term13")),NoAnnoList(Op("Params",[])),NoAnnoList(Tuple([]))])),App(CallT(SVar("nabl2--generate-constraint"),[Call(SVar("nabl2--generate-constraint-Opt0-rule"),[CallNoArgs(SVar("nabl2--generate-constraint-default-rule"))])],[NoAnnoList(Str("\"Opt0\""))]),NoAnnoList(Tuple([Var("nabl2_source"),Var("opt"),NoAnnoList(Op("Params",[NoAnnoList(Tuple([]))]))])))]))))])),RDefT("nabl2--generate-constraint-Opt0-rule",[DefaultVarDec("nabl2--generate-constraint-X-rule")],[],Rule(NoAnnoList(Tuple([Var("nabl2_source"),As(Var("term14"),NoAnnoList(Op("None",[]))),Var("args19")])),Var("constraint16"),[WithClause(Id),WithClause(LChoice(Assign(NoAnnoList(Op("Params",[As(Var("params28"),NoAnnoList(Tuple([])))])),Var("args19")),CallT(SVar("fatal-err"),[],[App(CallNoArgs(SVar("concat-strings")),NoAnnoList(List([NoAnnoList(Str("\"Cannot match expected \"")),NoAnnoList(Str("\"^ ()\"")),NoAnnoList(Str("\" with actual \"")),App(CallNoArgs(SVar("nabl2--pp-flat-args")),Var("args19")),NoAnnoList(Str("\" when matching \"")),NoAnnoList(Str("\"None()\"")),NoAnnoList(Str("\" with \"")),App(CallNoArgs(SVar("pp-NaBL2-Term")),Var("term14")),NoAnnoList(Str("\".\""))])))]))),WithClause(IfThen(CallNoArgs(SVar("nabl2--is-debug-collection-enabled")),CallT(SVar("nabl2--collection-info-msg"),[],[App(CallNoArgs(SVar("concat-strings")),NoAnnoList(List([NoAnnoList(Str("\"Opt0\"")),NoAnnoList(Str("\" [[ \"")),App(CallNoArgs(SVar("pp-NaBL2-Term")),Var("term14")),NoAnnoList(Str("\" ^ \"")),App(CallNoArgs(SVar("pp-NaBL2-CTerm")),Var("params28")),NoAnnoList(Str("\" ]]\""))])))]))),WithClause(Assign(Var("constraint16"),NoAnnoList(Op("CConj",[NoAnnoList(Op("CAstProperty",[App(CallNoArgs(SVar("nabl2--get-ast-index")),Var("term14")),NoAnnoList(Op("Params",[])),NoAnnoList(Tuple([]))])),NoAnnoList(Op("CTrue",[App(CallNoArgs(SVar("nabl2--get-ast-index")),Var("term14"))]))]))))])),RDefT("nabl2--generate-constraint-Opt0-rule",[DefaultVarDec("nabl2--generate-constraint-X-rule")],[],Rule(NoAnnoList(Tuple([Var("nabl2_source"),As(Var("term15"),NoAnnoList(Op("Some",[Var("x")]))),Var("args20")])),Var("constraint17"),[WithClause(Id),WithClause(LChoice(Assign(NoAnnoList(Op("Params",[As(Var("params29"),NoAnnoList(Tuple([])))])),Var("args20")),CallT(SVar("fatal-err"),[],[App(CallNoArgs(SVar("concat-strings")),NoAnnoList(List([NoAnnoList(Str("\"Cannot match expected \"")),NoAnnoList(Str("\"^ ()\"")),NoAnnoList(Str("\" with actual \"")),App(CallNoArgs(SVar("nabl2--pp-flat-args")),Var("args20")),NoAnnoList(Str("\" when matching \"")),NoAnnoList(Str("\"Some(x)\"")),NoAnnoList(Str("\" with \"")),App(CallNoArgs(SVar("pp-NaBL2-Term")),Var("term15")),NoAnnoList(Str("\".\""))])))]))),WithClause(IfThen(CallNoArgs(SVar("nabl2--is-debug-collection-enabled")),CallT(SVar("nabl2--collection-info-msg"),[],[App(CallNoArgs(SVar("concat-strings")),NoAnnoList(List([NoAnnoList(Str("\"Opt0\"")),NoAnnoList(Str("\" [[ \"")),App(CallNoArgs(SVar("pp-NaBL2-Term")),Var("term15")),NoAnnoList(Str("\" ^ \"")),App(CallNoArgs(SVar("pp-NaBL2-CTerm")),Var("params29")),NoAnnoList(Str("\" ]]\""))])))]))),WithClause(Assign(Var("constraint17"),NoAnnoList(Op("CConj",[NoAnnoList(Op("CAstProperty",[App(CallNoArgs(SVar("nabl2--get-ast-index")),Var("term15")),NoAnnoList(Op("Params",[])),NoAnnoList(Tuple([]))])),App(CallT(SVar("nabl2--generate-constraint"),[CallNoArgs(SVar("nabl2--generate-constraint-X-rule"))],[NoAnnoList(Str("\"X\""))]),NoAnnoList(Tuple([Var("nabl2_source"),Var("x"),NoAnnoList(Op("Params",[NoAnnoList(Tuple([]))]))])))]))))]))]),Rules([RDefT("nabl2--generate-constraint-Opt0t-rule",[],[],Rule(NoAnnoList(Tuple([Var("nabl2_source"),As(Var("term16"),Var("opt")),Var("args15")])),Var("constraint12"),[WithClause(Seq(Assign(Var("t"),App(CallT(SVar("nabl2--fresh-var"),[],[Var("nabl2_source")]),NoAnnoList(Str("\"t\"")))),Id)),WithClause(LChoice(Assign(NoAnnoList(Op("ParamsAndType",[As(Var("params24"),NoAnnoList(Tuple([]))),Var("type15")])),Var("args15")),CallT(SVar("fatal-err"),[],[App(CallNoArgs(SVar("concat-strings")),NoAnnoList(List([NoAnnoList(Str("\"Cannot match expected \"")),NoAnnoList(Str("\"^ () : type15\"")),NoAnnoList(Str("\" with actual \"")),App(CallNoArgs(SVar("nabl2--pp-flat-args")),Var("args15")),NoAnnoList(Str("\" when matching \"")),NoAnnoList(Str("\"opt\"")),NoAnnoList(Str("\" with \"")),App(CallNoArgs(SVar("pp-NaBL2-Term")),Var("term16")),NoAnnoList(Str("\".\""))])))]))),WithClause(IfThen(CallNoArgs(SVar("nabl2--is-debug-collection-enabled")),CallT(SVar("nabl2--collection-info-msg"),[],[App(CallNoArgs(SVar("concat-strings")),NoAnnoList(List([NoAnnoList(Str("\"Opt0t\"")),NoAnnoList(Str("\" [[ \"")),App(CallNoArgs(SVar("pp-NaBL2-Term")),Var("term16")),NoAnnoList(Str("\" ^ \"")),App(CallNoArgs(SVar("pp-NaBL2-CTerm")),Var("params24")),NoAnnoList(Str("\" : \"")),App(CallNoArgs(SVar("pp-NaBL2-objlangterm")),Var("type15")),NoAnnoList(Str("\" ]]\""))])))]))),WithClause(Assign(Var("constraint12"),NoAnnoList(Op("CConj",[NoAnnoList(Op("CEqual",[Var("type15"),Var("t"),NoAnnoList(Op("Message",[NoAnnoList(Op("Error",[])),NoAnnoList(Op("Default",[])),App(CallNoArgs(SVar("nabl2--get-ast-index")),Var("term16"))]))])),NoAnnoList(Op("CConj",[NoAnnoList(Op("CAstProperty",[App(CallNoArgs(SVar("nabl2--get-ast-index")),Var("term16")),NoAnnoList(Op("Type",[])),Var("type15")])),NoAnnoList(Op("CConj",[NoAnnoList(Op("CAstProperty",[App(CallNoArgs(SVar("nabl2--get-ast-index")),Var("term16")),NoAnnoList(Op("Params",[])),NoAnnoList(Tuple([]))])),App(CallT(SVar("nabl2--generate-constraint"),[Call(SVar("nabl2--generate-constraint-Opt0t-rule"),[CallNoArgs(SVar("nabl2--generate-constraint-default-rule"))])],[NoAnnoList(Str("\"Opt0t\""))]),NoAnnoList(Tuple([Var("nabl2_source"),Var("opt"),NoAnnoList(Op("ParamsAndType",[NoAnnoList(Tuple([])),Var("t")]))])))]))]))]))))])),RDefT("nabl2--generate-constraint-Opt0t-rule",[DefaultVarDec("nabl2--generate-constraint-X-rule")],[],Rule(NoAnnoList(Tuple([Var("nabl2_source"),As(Var("term17"),NoAnnoList(Op("None",[]))),Var("args16")])),Var("constraint13"),[WithClause(Seq(Assign(Var("wld1"),App(CallT(SVar("nabl2--fresh-var"),[],[Var("nabl2_source")]),NoAnnoList(Str("\"wld1\"")))),Id)),WithClause(LChoice(Assign(NoAnnoList(Op("ParamsAndType",[As(Var("params25"),NoAnnoList(Tuple([]))),Var("type16")])),Var("args16")),CallT(SVar("fatal-err"),[],[App(CallNoArgs(SVar("concat-strings")),NoAnnoList(List([NoAnnoList(Str("\"Cannot match expected \"")),NoAnnoList(Str("\"^ () : type16\"")),NoAnnoList(Str("\" with actual \"")),App(CallNoArgs(SVar("nabl2--pp-flat-args")),Var("args16")),NoAnnoList(Str("\" when matching \"")),NoAnnoList(Str("\"None()\"")),NoAnnoList(Str("\" with \"")),App(CallNoArgs(SVar("pp-NaBL2-Term")),Var("term17")),NoAnnoList(Str("\".\""))])))]))),WithClause(IfThen(CallNoArgs(SVar("nabl2--is-debug-collection-enabled")),CallT(SVar("nabl2--collection-info-msg"),[],[App(CallNoArgs(SVar("concat-strings")),NoAnnoList(List([NoAnnoList(Str("\"Opt0t\"")),NoAnnoList(Str("\" [[ \"")),App(CallNoArgs(SVar("pp-NaBL2-Term")),Var("term17")),NoAnnoList(Str("\" ^ \"")),App(CallNoArgs(SVar("pp-NaBL2-CTerm")),Var("params25")),NoAnnoList(Str("\" : \"")),App(CallNoArgs(SVar("pp-NaBL2-objlangterm")),Var("type16")),NoAnnoList(Str("\" ]]\""))])))]))),WithClause(Assign(Var("constraint13"),NoAnnoList(Op("CConj",[NoAnnoList(Op("CEqual",[Var("type16"),Var("wld1"),NoAnnoList(Op("Message",[NoAnnoList(Op("Error",[])),NoAnnoList(Op("Default",[])),App(CallNoArgs(SVar("nabl2--get-ast-index")),Var("term17"))]))])),NoAnnoList(Op("CConj",[NoAnnoList(Op("CAstProperty",[App(CallNoArgs(SVar("nabl2--get-ast-index")),Var("term17")),NoAnnoList(Op("Type",[])),Var("type16")])),NoAnnoList(Op("CConj",[NoAnnoList(Op("CAstProperty",[App(CallNoArgs(SVar("nabl2--get-ast-index")),Var("term17")),NoAnnoList(Op("Params",[])),NoAnnoList(Tuple([]))])),NoAnnoList(Op("CTrue",[App(CallNoArgs(SVar("nabl2--get-ast-index")),Var("term17"))]))]))]))]))))])),RDefT("nabl2--generate-constraint-Opt0t-rule",[DefaultVarDec("nabl2--generate-constraint-X-rule")],[],Rule(NoAnnoList(Tuple([Var("nabl2_source"),As(Var("term18"),NoAnnoList(Op("Some",[Var("x")]))),Var("args17")])),Var("constraint14"),[WithClause(Seq(Assign(Var("t"),App(CallT(SVar("nabl2--fresh-var"),[],[Var("nabl2_source")]),NoAnnoList(Str("\"t\"")))),Id)),WithClause(LChoice(Assign(NoAnnoList(Op("ParamsAndType",[As(Var("params26"),NoAnnoList(Tuple([]))),Var("type17")])),Var("args17")),CallT(SVar("fatal-err"),[],[App(CallNoArgs(SVar("concat-strings")),NoAnnoList(List([NoAnnoList(Str("\"Cannot match expected \"")),NoAnnoList(Str("\"^ () : type17\"")),NoAnnoList(Str("\" with actual \"")),App(CallNoArgs(SVar("nabl2--pp-flat-args")),Var("args17")),NoAnnoList(Str("\" when matching \"")),NoAnnoList(Str("\"Some(x)\"")),NoAnnoList(Str("\" with \"")),App(CallNoArgs(SVar("pp-NaBL2-Term")),Var("term18")),NoAnnoList(Str("\".\""))])))]))),WithClause(IfThen(CallNoArgs(SVar("nabl2--is-debug-collection-enabled")),CallT(SVar("nabl2--collection-info-msg"),[],[App(CallNoArgs(SVar("concat-strings")),NoAnnoList(List([NoAnnoList(Str("\"Opt0t\"")),NoAnnoList(Str("\" [[ \"")),App(CallNoArgs(SVar("pp-NaBL2-Term")),Var("term18")),NoAnnoList(Str("\" ^ \"")),App(CallNoArgs(SVar("pp-NaBL2-CTerm")),Var("params26")),NoAnnoList(Str("\" : \"")),App(CallNoArgs(SVar("pp-NaBL2-objlangterm")),Var("type17")),NoAnnoList(Str("\" ]]\""))])))]))),WithClause(Assign(Var("constraint14"),NoAnnoList(Op("CConj",[NoAnnoList(Op("CEqual",[Var("type17"),Var("t"),NoAnnoList(Op("Message",[NoAnnoList(Op("Error",[])),NoAnnoList(Op("Default",[])),App(CallNoArgs(SVar("nabl2--get-ast-index")),Var("term18"))]))])),NoAnnoList(Op("CConj",[NoAnnoList(Op("CAstProperty",[App(CallNoArgs(SVar("nabl2--get-ast-index")),Var("term18")),NoAnnoList(Op("Type",[])),Var("type17")])),NoAnnoList(Op("CConj",[NoAnnoList(Op("CAstProperty",[App(CallNoArgs(SVar("nabl2--get-ast-index")),Var("term18")),NoAnnoList(Op("Params",[])),NoAnnoList(Tuple([]))])),App(CallT(SVar("nabl2--generate-constraint"),[CallNoArgs(SVar("nabl2--generate-constraint-X-rule"))],[NoAnnoList(Str("\"X\""))]),NoAnnoList(Tuple([Var("nabl2_source"),Var("x"),NoAnnoList(Op("ParamsAndType",[NoAnnoList(Tuple([])),Var("t")]))])))]))]))]))))]))]),Rules([RDefT("nabl2--generate-constraint-Opt1-rule",[],[],Rule(NoAnnoList(Tuple([Var("nabl2_source"),As(Var("term19"),Var("opt")),Var("args12")])),Var("constraint9"),[WithClause(Id),WithClause(LChoice(Assign(NoAnnoList(Op("Params",[As(Var("params21"),NoAnnoList(Tuple([Var("s")])))])),Var("args12")),CallT(SVar("fatal-err"),[],[App(CallNoArgs(SVar("concat-strings")),NoAnnoList(List([NoAnnoList(Str("\"Cannot match expected \"")),NoAnnoList(Str("\"^ (s)\"")),NoAnnoList(Str("\" with actual \"")),App(CallNoArgs(SVar("nabl2--pp-flat-args")),Var("args12")),NoAnnoList(Str("\" when matching \"")),NoAnnoList(Str("\"opt\"")),NoAnnoList(Str("\" with \"")),App(CallNoArgs(SVar("pp-NaBL2-Term")),Var("term19")),NoAnnoList(Str("\".\""))])))]))),WithClause(IfThen(CallNoArgs(SVar("nabl2--is-debug-collection-enabled")),CallT(SVar("nabl2--collection-info-msg"),[],[App(CallNoArgs(SVar("concat-strings")),NoAnnoList(List([NoAnnoList(Str("\"Opt1\"")),NoAnnoList(Str("\" [[ \"")),App(CallNoArgs(SVar("pp-NaBL2-Term")),Var("term19")),NoAnnoList(Str("\" ^ \"")),App(CallNoArgs(SVar("pp-NaBL2-CTerm")),Var("params21")),NoAnnoList(Str("\" ]]\""))])))]))),WithClause(Assign(Var("constraint9"),NoAnnoList(Op("CConj",[NoAnnoList(Op("CAstProperty",[App(CallNoArgs(SVar("nabl2--get-ast-index")),Var("term19")),NoAnnoList(Op("Params",[])),NoAnnoList(Tuple([Var("s")]))])),App(CallT(SVar("nabl2--generate-constraint"),[Call(SVar("nabl2--generate-constraint-Opt1-rule"),[CallNoArgs(SVar("nabl2--generate-constraint-default-rule"))])],[NoAnnoList(Str("\"Opt1\""))]),NoAnnoList(Tuple([Var("nabl2_source"),Var("opt"),NoAnnoList(Op("Params",[NoAnnoList(Tuple([Var("s")]))]))])))]))))])),RDefT("nabl2--generate-constraint-Opt1-rule",[DefaultVarDec("nabl2--generate-constraint-X-rule")],[],Rule(NoAnnoList(Tuple([Var("nabl2_source"),As(Var("term20"),NoAnnoList(Op("None",[]))),Var("args13")])),Var("constraint10"),[WithClause(Id),WithClause(LChoice(Assign(NoAnnoList(Op("Params",[As(Var("params22"),NoAnnoList(Tuple([Var("s")])))])),Var("args13")),CallT(SVar("fatal-err"),[],[App(CallNoArgs(SVar("concat-strings")),NoAnnoList(List([NoAnnoList(Str("\"Cannot match expected \"")),NoAnnoList(Str("\"^ (s)\"")),NoAnnoList(Str("\" with actual \"")),App(CallNoArgs(SVar("nabl2--pp-flat-args")),Var("args13")),NoAnnoList(Str("\" when matching \"")),NoAnnoList(Str("\"None()\"")),NoAnnoList(Str("\" with \"")),App(CallNoArgs(SVar("pp-NaBL2-Term")),Var("term20")),NoAnnoList(Str("\".\""))])))]))),WithClause(IfThen(CallNoArgs(SVar("nabl2--is-debug-collection-enabled")),CallT(SVar("nabl2--collection-info-msg"),[],[App(CallNoArgs(SVar("concat-strings")),NoAnnoList(List([NoAnnoList(Str("\"Opt1\"")),NoAnnoList(Str("\" [[ \"")),App(CallNoArgs(SVar("pp-NaBL2-Term")),Var("term20")),NoAnnoList(Str("\" ^ \"")),App(CallNoArgs(SVar("pp-NaBL2-CTerm")),Var("params22")),NoAnnoList(Str("\" ]]\""))])))]))),WithClause(Assign(Var("constraint10"),NoAnnoList(Op("CConj",[NoAnnoList(Op("CAstProperty",[App(CallNoArgs(SVar("nabl2--get-ast-index")),Var("term20")),NoAnnoList(Op("Params",[])),NoAnnoList(Tuple([Var("s")]))])),NoAnnoList(Op("CTrue",[App(CallNoArgs(SVar("nabl2--get-ast-index")),Var("term20"))]))]))))])),RDefT("nabl2--generate-constraint-Opt1-rule",[DefaultVarDec("nabl2--generate-constraint-X-rule")],[],Rule(NoAnnoList(Tuple([Var("nabl2_source"),As(Var("term21"),NoAnnoList(Op("Some",[Var("x")]))),Var("args14")])),Var("constraint11"),[WithClause(Id),WithClause(LChoice(Assign(NoAnnoList(Op("Params",[As(Var("params23"),NoAnnoList(Tuple([Var("s")])))])),Var("args14")),CallT(SVar("fatal-err"),[],[App(CallNoArgs(SVar("concat-strings")),NoAnnoList(List([NoAnnoList(Str("\"Cannot match expected \"")),NoAnnoList(Str("\"^ (s)\"")),NoAnnoList(Str("\" with actual \"")),App(CallNoArgs(SVar("nabl2--pp-flat-args")),Var("args14")),NoAnnoList(Str("\" when matching \"")),NoAnnoList(Str("\"Some(x)\"")),NoAnnoList(Str("\" with \"")),App(CallNoArgs(SVar("pp-NaBL2-Term")),Var("term21")),NoAnnoList(Str("\".\""))])))]))),WithClause(IfThen(CallNoArgs(SVar("nabl2--is-debug-collection-enabled")),CallT(SVar("nabl2--collection-info-msg"),[],[App(CallNoArgs(SVar("concat-strings")),NoAnnoList(List([NoAnnoList(Str("\"Opt1\"")),NoAnnoList(Str("\" [[ \"")),App(CallNoArgs(SVar("pp-NaBL2-Term")),Var("term21")),NoAnnoList(Str("\" ^ \"")),App(CallNoArgs(SVar("pp-NaBL2-CTerm")),Var("params23")),NoAnnoList(Str("\" ]]\""))])))]))),WithClause(Assign(Var("constraint11"),NoAnnoList(Op("CConj",[NoAnnoList(Op("CAstProperty",[App(CallNoArgs(SVar("nabl2--get-ast-index")),Var("term21")),NoAnnoList(Op("Params",[])),NoAnnoList(Tuple([Var("s")]))])),App(CallT(SVar("nabl2--generate-constraint"),[CallNoArgs(SVar("nabl2--generate-constraint-X-rule"))],[NoAnnoList(Str("\"X\""))]),NoAnnoList(Tuple([Var("nabl2_source"),Var("x"),NoAnnoList(Op("Params",[NoAnnoList(Tuple([Var("s")]))]))])))]))))]))]),Rules([RDefT("nabl2--generate-constraint-Opt1t-rule",[],[],Rule(NoAnnoList(Tuple([Var("nabl2_source"),As(Var("term22"),Var("opt")),Var("args9")])),Var("constraint6"),[WithClause(Seq(Assign(Var("t"),App(CallT(SVar("nabl2--fresh-var"),[],[Var("nabl2_source")]),NoAnnoList(Str("\"t\"")))),Id)),WithClause(LChoice(Assign(NoAnnoList(Op("ParamsAndType",[As(Var("params18"),NoAnnoList(Tuple([Var("s")]))),Var("type18")])),Var("args9")),CallT(SVar("fatal-err"),[],[App(CallNoArgs(SVar("concat-strings")),NoAnnoList(List([NoAnnoList(Str("\"Cannot match expected \"")),NoAnnoList(Str("\"^ (s) : type18\"")),NoAnnoList(Str("\" with actual \"")),App(CallNoArgs(SVar("nabl2--pp-flat-args")),Var("args9")),NoAnnoList(Str("\" when matching \"")),NoAnnoList(Str("\"opt\"")),NoAnnoList(Str("\" with \"")),App(CallNoArgs(SVar("pp-NaBL2-Term")),Var("term22")),NoAnnoList(Str("\".\""))])))]))),WithClause(IfThen(CallNoArgs(SVar("nabl2--is-debug-collection-enabled")),CallT(SVar("nabl2--collection-info-msg"),[],[App(CallNoArgs(SVar("concat-strings")),NoAnnoList(List([NoAnnoList(Str("\"Opt1t\"")),NoAnnoList(Str("\" [[ \"")),App(CallNoArgs(SVar("pp-NaBL2-Term")),Var("term22")),NoAnnoList(Str("\" ^ \"")),App(CallNoArgs(SVar("pp-NaBL2-CTerm")),Var("params18")),NoAnnoList(Str("\" : \"")),App(CallNoArgs(SVar("pp-NaBL2-objlangterm")),Var("type18")),NoAnnoList(Str("\" ]]\""))])))]))),WithClause(Assign(Var("constraint6"),NoAnnoList(Op("CConj",[NoAnnoList(Op("CEqual",[Var("type18"),Var("t"),NoAnnoList(Op("Message",[NoAnnoList(Op("Error",[])),NoAnnoList(Op("Default",[])),App(CallNoArgs(SVar("nabl2--get-ast-index")),Var("term22"))]))])),NoAnnoList(Op("CConj",[NoAnnoList(Op("CAstProperty",[App(CallNoArgs(SVar("nabl2--get-ast-index")),Var("term22")),NoAnnoList(Op("Type",[])),Var("type18")])),NoAnnoList(Op("CConj",[NoAnnoList(Op("CAstProperty",[App(CallNoArgs(SVar("nabl2--get-ast-index")),Var("term22")),NoAnnoList(Op("Params",[])),NoAnnoList(Tuple([Var("s")]))])),App(CallT(SVar("nabl2--generate-constraint"),[Call(SVar("nabl2--generate-constraint-Opt1t-rule"),[CallNoArgs(SVar("nabl2--generate-constraint-default-rule"))])],[NoAnnoList(Str("\"Opt1t\""))]),NoAnnoList(Tuple([Var("nabl2_source"),Var("opt"),NoAnnoList(Op("ParamsAndType",[NoAnnoList(Tuple([Var("s")])),Var("t")]))])))]))]))]))))])),RDefT("nabl2--generate-constraint-Opt1t-rule",[DefaultVarDec("nabl2--generate-constraint-X-rule")],[],Rule(NoAnnoList(Tuple([Var("nabl2_source"),As(Var("term23"),NoAnnoList(Op("None",[]))),Var("args10")])),Var("constraint7"),[WithClause(Seq(Assign(Var("wld1"),App(CallT(SVar("nabl2--fresh-var"),[],[Var("nabl2_source")]),NoAnnoList(Str("\"wld1\"")))),Id)),WithClause(LChoice(Assign(NoAnnoList(Op("ParamsAndType",[As(Var("params19"),NoAnnoList(Tuple([Var("s")]))),Var("type19")])),Var("args10")),CallT(SVar("fatal-err"),[],[App(CallNoArgs(SVar("concat-strings")),NoAnnoList(List([NoAnnoList(Str("\"Cannot match expected \"")),NoAnnoList(Str("\"^ (s) : type19\"")),NoAnnoList(Str("\" with actual \"")),App(CallNoArgs(SVar("nabl2--pp-flat-args")),Var("args10")),NoAnnoList(Str("\" when matching \"")),NoAnnoList(Str("\"None()\"")),NoAnnoList(Str("\" with \"")),App(CallNoArgs(SVar("pp-NaBL2-Term")),Var("term23")),NoAnnoList(Str("\".\""))])))]))),WithClause(IfThen(CallNoArgs(SVar("nabl2--is-debug-collection-enabled")),CallT(SVar("nabl2--collection-info-msg"),[],[App(CallNoArgs(SVar("concat-strings")),NoAnnoList(List([NoAnnoList(Str("\"Opt1t\"")),NoAnnoList(Str("\" [[ \"")),App(CallNoArgs(SVar("pp-NaBL2-Term")),Var("term23")),NoAnnoList(Str("\" ^ \"")),App(CallNoArgs(SVar("pp-NaBL2-CTerm")),Var("params19")),NoAnnoList(Str("\" : \"")),App(CallNoArgs(SVar("pp-NaBL2-objlangterm")),Var("type19")),NoAnnoList(Str("\" ]]\""))])))]))),WithClause(Assign(Var("constraint7"),NoAnnoList(Op("CConj",[NoAnnoList(Op("CEqual",[Var("type19"),Var("wld1"),NoAnnoList(Op("Message",[NoAnnoList(Op("Error",[])),NoAnnoList(Op("Default",[])),App(CallNoArgs(SVar("nabl2--get-ast-index")),Var("term23"))]))])),NoAnnoList(Op("CConj",[NoAnnoList(Op("CAstProperty",[App(CallNoArgs(SVar("nabl2--get-ast-index")),Var("term23")),NoAnnoList(Op("Type",[])),Var("type19")])),NoAnnoList(Op("CConj",[NoAnnoList(Op("CAstProperty",[App(CallNoArgs(SVar("nabl2--get-ast-index")),Var("term23")),NoAnnoList(Op("Params",[])),NoAnnoList(Tuple([Var("s")]))])),NoAnnoList(Op("CTrue",[App(CallNoArgs(SVar("nabl2--get-ast-index")),Var("term23"))]))]))]))]))))])),RDefT("nabl2--generate-constraint-Opt1t-rule",[DefaultVarDec("nabl2--generate-constraint-X-rule")],[],Rule(NoAnnoList(Tuple([Var("nabl2_source"),As(Var("term24"),NoAnnoList(Op("Some",[Var("x")]))),Var("args11")])),Var("constraint8"),[WithClause(Seq(Assign(Var("t"),App(CallT(SVar("nabl2--fresh-var"),[],[Var("nabl2_source")]),NoAnnoList(Str("\"t\"")))),Id)),WithClause(LChoice(Assign(NoAnnoList(Op("ParamsAndType",[As(Var("params20"),NoAnnoList(Tuple([Var("s")]))),Var("type20")])),Var("args11")),CallT(SVar("fatal-err"),[],[App(CallNoArgs(SVar("concat-strings")),NoAnnoList(List([NoAnnoList(Str("\"Cannot match expected \"")),NoAnnoList(Str("\"^ (s) : type20\"")),NoAnnoList(Str("\" with actual \"")),App(CallNoArgs(SVar("nabl2--pp-flat-args")),Var("args11")),NoAnnoList(Str("\" when matching \"")),NoAnnoList(Str("\"Some(x)\"")),NoAnnoList(Str("\" with \"")),App(CallNoArgs(SVar("pp-NaBL2-Term")),Var("term24")),NoAnnoList(Str("\".\""))])))]))),WithClause(IfThen(CallNoArgs(SVar("nabl2--is-debug-collection-enabled")),CallT(SVar("nabl2--collection-info-msg"),[],[App(CallNoArgs(SVar("concat-strings")),NoAnnoList(List([NoAnnoList(Str("\"Opt1t\"")),NoAnnoList(Str("\" [[ \"")),App(CallNoArgs(SVar("pp-NaBL2-Term")),Var("term24")),NoAnnoList(Str("\" ^ \"")),App(CallNoArgs(SVar("pp-NaBL2-CTerm")),Var("params20")),NoAnnoList(Str("\" : \"")),App(CallNoArgs(SVar("pp-NaBL2-objlangterm")),Var("type20")),NoAnnoList(Str("\" ]]\""))])))]))),WithClause(Assign(Var("constraint8"),NoAnnoList(Op("CConj",[NoAnnoList(Op("CEqual",[Var("type20"),Var("t"),NoAnnoList(Op("Message",[NoAnnoList(Op("Error",[])),NoAnnoList(Op("Default",[])),App(CallNoArgs(SVar("nabl2--get-ast-index")),Var("term24"))]))])),NoAnnoList(Op("CConj",[NoAnnoList(Op("CAstProperty",[App(CallNoArgs(SVar("nabl2--get-ast-index")),Var("term24")),NoAnnoList(Op("Type",[])),Var("type20")])),NoAnnoList(Op("CConj",[NoAnnoList(Op("CAstProperty",[App(CallNoArgs(SVar("nabl2--get-ast-index")),Var("term24")),NoAnnoList(Op("Params",[])),NoAnnoList(Tuple([Var("s")]))])),App(CallT(SVar("nabl2--generate-constraint"),[CallNoArgs(SVar("nabl2--generate-constraint-X-rule"))],[NoAnnoList(Str("\"X\""))]),NoAnnoList(Tuple([Var("nabl2_source"),Var("x"),NoAnnoList(Op("ParamsAndType",[NoAnnoList(Tuple([Var("s")])),Var("t")]))])))]))]))]))))]))]),Rules([RDefT("nabl2--generate-constraint-Opt2-rule",[],[],Rule(NoAnnoList(Tuple([Var("nabl2_source"),As(Var("term25"),Var("opt")),Var("args6")])),Var("constraint3"),[WithClause(Id),WithClause(LChoice(Assign(NoAnnoList(Op("Params",[As(Var("params15"),NoAnnoList(Tuple([Var("s1"),Var("s2")])))])),Var("args6")),CallT(SVar("fatal-err"),[],[App(CallNoArgs(SVar("concat-strings")),NoAnnoList(List([NoAnnoList(Str("\"Cannot match expected \"")),NoAnnoList(Str("\"^ (s1, s2)\"")),NoAnnoList(Str("\" with actual \"")),App(CallNoArgs(SVar("nabl2--pp-flat-args")),Var("args6")),NoAnnoList(Str("\" when matching \"")),NoAnnoList(Str("\"opt\"")),NoAnnoList(Str("\" with \"")),App(CallNoArgs(SVar("pp-NaBL2-Term")),Var("term25")),NoAnnoList(Str("\".\""))])))]))),WithClause(IfThen(CallNoArgs(SVar("nabl2--is-debug-collection-enabled")),CallT(SVar("nabl2--collection-info-msg"),[],[App(CallNoArgs(SVar("concat-strings")),NoAnnoList(List([NoAnnoList(Str("\"Opt2\"")),NoAnnoList(Str("\" [[ \"")),App(CallNoArgs(SVar("pp-NaBL2-Term")),Var("term25")),NoAnnoList(Str("\" ^ \"")),App(CallNoArgs(SVar("pp-NaBL2-CTerm")),Var("params15")),NoAnnoList(Str("\" ]]\""))])))]))),WithClause(Assign(Var("constraint3"),NoAnnoList(Op("CConj",[NoAnnoList(Op("CAstProperty",[App(CallNoArgs(SVar("nabl2--get-ast-index")),Var("term25")),NoAnnoList(Op("Params",[])),NoAnnoList(Tuple([Var("s1"),Var("s2")]))])),App(CallT(SVar("nabl2--generate-constraint"),[Call(SVar("nabl2--generate-constraint-Opt2-rule"),[CallNoArgs(SVar("nabl2--generate-constraint-default-rule"))])],[NoAnnoList(Str("\"Opt2\""))]),NoAnnoList(Tuple([Var("nabl2_source"),Var("opt"),NoAnnoList(Op("Params",[NoAnnoList(Tuple([Var("s1"),Var("s2")]))]))])))]))))])),RDefT("nabl2--generate-constraint-Opt2-rule",[DefaultVarDec("nabl2--generate-constraint-X-rule")],[],Rule(NoAnnoList(Tuple([Var("nabl2_source"),As(Var("term26"),NoAnnoList(Op("None",[]))),Var("args7")])),Var("constraint4"),[WithClause(Id),WithClause(LChoice(Assign(NoAnnoList(Op("Params",[As(Var("params16"),NoAnnoList(Tuple([Var("s1"),Var("s2")])))])),Var("args7")),CallT(SVar("fatal-err"),[],[App(CallNoArgs(SVar("concat-strings")),NoAnnoList(List([NoAnnoList(Str("\"Cannot match expected \"")),NoAnnoList(Str("\"^ (s1, s2)\"")),NoAnnoList(Str("\" with actual \"")),App(CallNoArgs(SVar("nabl2--pp-flat-args")),Var("args7")),NoAnnoList(Str("\" when matching \"")),NoAnnoList(Str("\"None()\"")),NoAnnoList(Str("\" with \"")),App(CallNoArgs(SVar("pp-NaBL2-Term")),Var("term26")),NoAnnoList(Str("\".\""))])))]))),WithClause(IfThen(CallNoArgs(SVar("nabl2--is-debug-collection-enabled")),CallT(SVar("nabl2--collection-info-msg"),[],[App(CallNoArgs(SVar("concat-strings")),NoAnnoList(List([NoAnnoList(Str("\"Opt2\"")),NoAnnoList(Str("\" [[ \"")),App(CallNoArgs(SVar("pp-NaBL2-Term")),Var("term26")),NoAnnoList(Str("\" ^ \"")),App(CallNoArgs(SVar("pp-NaBL2-CTerm")),Var("params16")),NoAnnoList(Str("\" ]]\""))])))]))),WithClause(Assign(Var("constraint4"),NoAnnoList(Op("CConj",[NoAnnoList(Op("CAstProperty",[App(CallNoArgs(SVar("nabl2--get-ast-index")),Var("term26")),NoAnnoList(Op("Params",[])),NoAnnoList(Tuple([Var("s1"),Var("s2")]))])),NoAnnoList(Op("CTrue",[App(CallNoArgs(SVar("nabl2--get-ast-index")),Var("term26"))]))]))))])),RDefT("nabl2--generate-constraint-Opt2-rule",[DefaultVarDec("nabl2--generate-constraint-X-rule")],[],Rule(NoAnnoList(Tuple([Var("nabl2_source"),As(Var("term27"),NoAnnoList(Op("Some",[Var("x")]))),Var("args8")])),Var("constraint5"),[WithClause(Id),WithClause(LChoice(Assign(NoAnnoList(Op("Params",[As(Var("params17"),NoAnnoList(Tuple([Var("s1"),Var("s2")])))])),Var("args8")),CallT(SVar("fatal-err"),[],[App(CallNoArgs(SVar("concat-strings")),NoAnnoList(List([NoAnnoList(Str("\"Cannot match expected \"")),NoAnnoList(Str("\"^ (s1, s2)\"")),NoAnnoList(Str("\" with actual \"")),App(CallNoArgs(SVar("nabl2--pp-flat-args")),Var("args8")),NoAnnoList(Str("\" when matching \"")),NoAnnoList(Str("\"Some(x)\"")),NoAnnoList(Str("\" with \"")),App(CallNoArgs(SVar("pp-NaBL2-Term")),Var("term27")),NoAnnoList(Str("\".\""))])))]))),WithClause(IfThen(CallNoArgs(SVar("nabl2--is-debug-collection-enabled")),CallT(SVar("nabl2--collection-info-msg"),[],[App(CallNoArgs(SVar("concat-strings")),NoAnnoList(List([NoAnnoList(Str("\"Opt2\"")),NoAnnoList(Str("\" [[ \"")),App(CallNoArgs(SVar("pp-NaBL2-Term")),Var("term27")),NoAnnoList(Str("\" ^ \"")),App(CallNoArgs(SVar("pp-NaBL2-CTerm")),Var("params17")),NoAnnoList(Str("\" ]]\""))])))]))),WithClause(Assign(Var("constraint5"),NoAnnoList(Op("CConj",[NoAnnoList(Op("CAstProperty",[App(CallNoArgs(SVar("nabl2--get-ast-index")),Var("term27")),NoAnnoList(Op("Params",[])),NoAnnoList(Tuple([Var("s1"),Var("s2")]))])),App(CallT(SVar("nabl2--generate-constraint"),[CallNoArgs(SVar("nabl2--generate-constraint-X-rule"))],[NoAnnoList(Str("\"X\""))]),NoAnnoList(Tuple([Var("nabl2_source"),Var("x"),NoAnnoList(Op("Params",[NoAnnoList(Tuple([Var("s1"),Var("s2")]))]))])))]))))]))]),Rules([RDefT("nabl2--generate-constraint-Opt2t-rule",[],[],Rule(NoAnnoList(Tuple([Var("nabl2_source"),As(Var("term28"),Var("opt")),Var("args3")])),Var("constraint0"),[WithClause(Seq(Assign(Var("t"),App(CallT(SVar("nabl2--fresh-var"),[],[Var("nabl2_source")]),NoAnnoList(Str("\"t\"")))),Id)),WithClause(LChoice(Assign(NoAnnoList(Op("ParamsAndType",[As(Var("params12"),NoAnnoList(Tuple([Var("s1"),Var("s2")]))),Var("type21")])),Var("args3")),CallT(SVar("fatal-err"),[],[App(CallNoArgs(SVar("concat-strings")),NoAnnoList(List([NoAnnoList(Str("\"Cannot match expected \"")),NoAnnoList(Str("\"^ (s1, s2) : type21\"")),NoAnnoList(Str("\" with actual \"")),App(CallNoArgs(SVar("nabl2--pp-flat-args")),Var("args3")),NoAnnoList(Str("\" when matching \"")),NoAnnoList(Str("\"opt\"")),NoAnnoList(Str("\" with \"")),App(CallNoArgs(SVar("pp-NaBL2-Term")),Var("term28")),NoAnnoList(Str("\".\""))])))]))),WithClause(IfThen(CallNoArgs(SVar("nabl2--is-debug-collection-enabled")),CallT(SVar("nabl2--collection-info-msg"),[],[App(CallNoArgs(SVar("concat-strings")),NoAnnoList(List([NoAnnoList(Str("\"Opt2t\"")),NoAnnoList(Str("\" [[ \"")),App(CallNoArgs(SVar("pp-NaBL2-Term")),Var("term28")),NoAnnoList(Str("\" ^ \"")),App(CallNoArgs(SVar("pp-NaBL2-CTerm")),Var("params12")),NoAnnoList(Str("\" : \"")),App(CallNoArgs(SVar("pp-NaBL2-objlangterm")),Var("type21")),NoAnnoList(Str("\" ]]\""))])))]))),WithClause(Assign(Var("constraint0"),NoAnnoList(Op("CConj",[NoAnnoList(Op("CEqual",[Var("type21"),Var("t"),NoAnnoList(Op("Message",[NoAnnoList(Op("Error",[])),NoAnnoList(Op("Default",[])),App(CallNoArgs(SVar("nabl2--get-ast-index")),Var("term28"))]))])),NoAnnoList(Op("CConj",[NoAnnoList(Op("CAstProperty",[App(CallNoArgs(SVar("nabl2--get-ast-index")),Var("term28")),NoAnnoList(Op("Type",[])),Var("type21")])),NoAnnoList(Op("CConj",[NoAnnoList(Op("CAstProperty",[App(CallNoArgs(SVar("nabl2--get-ast-index")),Var("term28")),NoAnnoList(Op("Params",[])),NoAnnoList(Tuple([Var("s1"),Var("s2")]))])),App(CallT(SVar("nabl2--generate-constraint"),[Call(SVar("nabl2--generate-constraint-Opt2t-rule"),[CallNoArgs(SVar("nabl2--generate-constraint-default-rule"))])],[NoAnnoList(Str("\"Opt2t\""))]),NoAnnoList(Tuple([Var("nabl2_source"),Var("opt"),NoAnnoList(Op("ParamsAndType",[NoAnnoList(Tuple([Var("s1"),Var("s2")])),Var("t")]))])))]))]))]))))])),RDefT("nabl2--generate-constraint-Opt2t-rule",[DefaultVarDec("nabl2--generate-constraint-X-rule")],[],Rule(NoAnnoList(Tuple([Var("nabl2_source"),As(Var("term29"),NoAnnoList(Op("None",[]))),Var("args4")])),Var("constraint1"),[WithClause(Seq(Assign(Var("wld1"),App(CallT(SVar("nabl2--fresh-var"),[],[Var("nabl2_source")]),NoAnnoList(Str("\"wld1\"")))),Id)),WithClause(LChoice(Assign(NoAnnoList(Op("ParamsAndType",[As(Var("params13"),NoAnnoList(Tuple([Var("s1"),Var("s2")]))),Var("type22")])),Var("args4")),CallT(SVar("fatal-err"),[],[App(CallNoArgs(SVar("concat-strings")),NoAnnoList(List([NoAnnoList(Str("\"Cannot match expected \"")),NoAnnoList(Str("\"^ (s1, s2) : type22\"")),NoAnnoList(Str("\" with actual \"")),App(CallNoArgs(SVar("nabl2--pp-flat-args")),Var("args4")),NoAnnoList(Str("\" when matching \"")),NoAnnoList(Str("\"None()\"")),NoAnnoList(Str("\" with \"")),App(CallNoArgs(SVar("pp-NaBL2-Term")),Var("term29")),NoAnnoList(Str("\".\""))])))]))),WithClause(IfThen(CallNoArgs(SVar("nabl2--is-debug-collection-enabled")),CallT(SVar("nabl2--collection-info-msg"),[],[App(CallNoArgs(SVar("concat-strings")),NoAnnoList(List([NoAnnoList(Str("\"Opt2t\"")),NoAnnoList(Str("\" [[ \"")),App(CallNoArgs(SVar("pp-NaBL2-Term")),Var("term29")),NoAnnoList(Str("\" ^ \"")),App(CallNoArgs(SVar("pp-NaBL2-CTerm")),Var("params13")),NoAnnoList(Str("\" : \"")),App(CallNoArgs(SVar("pp-NaBL2-objlangterm")),Var("type22")),NoAnnoList(Str("\" ]]\""))])))]))),WithClause(Assign(Var("constraint1"),NoAnnoList(Op("CConj",[NoAnnoList(Op("CEqual",[Var("type22"),Var("wld1"),NoAnnoList(Op("Message",[NoAnnoList(Op("Error",[])),NoAnnoList(Op("Default",[])),App(CallNoArgs(SVar("nabl2--get-ast-index")),Var("term29"))]))])),NoAnnoList(Op("CConj",[NoAnnoList(Op("CAstProperty",[App(CallNoArgs(SVar("nabl2--get-ast-index")),Var("term29")),NoAnnoList(Op("Type",[])),Var("type22")])),NoAnnoList(Op("CConj",[NoAnnoList(Op("CAstProperty",[App(CallNoArgs(SVar("nabl2--get-ast-index")),Var("term29")),NoAnnoList(Op("Params",[])),NoAnnoList(Tuple([Var("s1"),Var("s2")]))])),NoAnnoList(Op("CTrue",[App(CallNoArgs(SVar("nabl2--get-ast-index")),Var("term29"))]))]))]))]))))])),RDefT("nabl2--generate-constraint-Opt2t-rule",[DefaultVarDec("nabl2--generate-constraint-X-rule")],[],Rule(NoAnnoList(Tuple([Var("nabl2_source"),As(Var("term30"),NoAnnoList(Op("Some",[Var("x")]))),Var("args5")])),Var("constraint2"),[WithClause(Seq(Assign(Var("t"),App(CallT(SVar("nabl2--fresh-var"),[],[Var("nabl2_source")]),NoAnnoList(Str("\"t\"")))),Id)),WithClause(LChoice(Assign(NoAnnoList(Op("ParamsAndType",[As(Var("params14"),NoAnnoList(Tuple([Var("s1"),Var("s2")]))),Var("type23")])),Var("args5")),CallT(SVar("fatal-err"),[],[App(CallNoArgs(SVar("concat-strings")),NoAnnoList(List([NoAnnoList(Str("\"Cannot match expected \"")),NoAnnoList(Str("\"^ (s1, s2) : type23\"")),NoAnnoList(Str("\" with actual \"")),App(CallNoArgs(SVar("nabl2--pp-flat-args")),Var("args5")),NoAnnoList(Str("\" when matching \"")),NoAnnoList(Str("\"Some(x)\"")),NoAnnoList(Str("\" with \"")),App(CallNoArgs(SVar("pp-NaBL2-Term")),Var("term30")),NoAnnoList(Str("\".\""))])))]))),WithClause(IfThen(CallNoArgs(SVar("nabl2--is-debug-collection-enabled")),CallT(SVar("nabl2--collection-info-msg"),[],[App(CallNoArgs(SVar("concat-strings")),NoAnnoList(List([NoAnnoList(Str("\"Opt2t\"")),NoAnnoList(Str("\" [[ \"")),App(CallNoArgs(SVar("pp-NaBL2-Term")),Var("term30")),NoAnnoList(Str("\" ^ \"")),App(CallNoArgs(SVar("pp-NaBL2-CTerm")),Var("params14")),NoAnnoList(Str("\" : \"")),App(CallNoArgs(SVar("pp-NaBL2-objlangterm")),Var("type23")),NoAnnoList(Str("\" ]]\""))])))]))),WithClause(Assign(Var("constraint2"),NoAnnoList(Op("CConj",[NoAnnoList(Op("CEqual",[Var("type23"),Var("t"),NoAnnoList(Op("Message",[NoAnnoList(Op("Error",[])),NoAnnoList(Op("Default",[])),App(CallNoArgs(SVar("nabl2--get-ast-index")),Var("term30"))]))])),NoAnnoList(Op("CConj",[NoAnnoList(Op("CAstProperty",[App(CallNoArgs(SVar("nabl2--get-ast-index")),Var("term30")),NoAnnoList(Op("Type",[])),Var("type23")])),NoAnnoList(Op("CConj",[NoAnnoList(Op("CAstProperty",[App(CallNoArgs(SVar("nabl2--get-ast-index")),Var("term30")),NoAnnoList(Op("Params",[])),NoAnnoList(Tuple([Var("s1"),Var("s2")]))])),App(CallT(SVar("nabl2--generate-constraint"),[CallNoArgs(SVar("nabl2--generate-constraint-X-rule"))],[NoAnnoList(Str("\"X\""))]),NoAnnoList(Tuple([Var("nabl2_source"),Var("x"),NoAnnoList(Op("ParamsAndType",[NoAnnoList(Tuple([Var("s1"),Var("s2")])),Var("t")]))])))]))]))]))))]))])])